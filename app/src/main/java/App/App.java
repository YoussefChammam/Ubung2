/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package App;
import App.enums.SearchOptions;
import App.enums.SortOptions;
import App.Lists.DoublyLinkedList;
import App.Lists.SingleLinkedList;
import App.Data.Student;
import App.Algorithms.SelectionSort;
import App.Algorithms.BubbleSort;
import App.Algorithms.SearchTool;
import java.util.Scanner;

public class App {

    /**
     * Author : Youssef Chammam
     * Matrikelnummer : S0579341
     */
    private static SingleLinkedList<Student> singlyList;
    private static Scanner scanner;
    private static DoublyLinkedList<Student> doublyList;
    private Object DoublyLinkedList;


    private void singly() {

        scanner = new Scanner(System.in);
        singlyList = new SingleLinkedList<>();

        singlyList.add(new Student(10245, "Mosby", "ted",  90));
        singlyList.add(new Student(12053, "Stinson", "Barney", 15));
        String input = "";

        while (true) {

            System.out.println("Console-Application: \n");
            System.out.println("Single linked list has been selected : \n");
            System.out.println("*1* Pushes a student to the end of the list.");
            System.out.println("*2* Will insert a student in the list, in the specified position.");
            System.out.println("*3* Pushes a student to the beginning of the list .");
            System.out.println("*4* Adds the Student to the end of this list.");
            System.out.println("*5* Will return the student at the specified index.");
            System.out.println("*6* shows all students that are in the list.");
            System.out.println("*7* Will return the number of students in our list.");
            System.out.println("*8* Will remove a student in the list, in the specified position.");
            System.out.println("*9* Removes all of the Students from the list.");
            System.out.println("*10* Searches for a student following a precise characteristic.");
            System.out.println("*11* Sorts the list depending of the precised property.");
            System.out.println("0. Exit\n");
            System.out.println("Select your option:");

            try {
                input = scanner.next();
            } catch (Exception e) {
                System.out.println("invalid choice");
            }

            System.out.println();

            switch (input) {
                case "0":
                    System.exit(0);
                    break;

                case "1":
                    add();
                    break;
                case "2":
                    insert();
                    break;

                case "3":
                    addFirst();
                    break;
                case "4":
                    addLast();
                    break;

                case "5":
                    get();
                    break;
                case "6":
                    singlyList.printAll();
                    break;

                case "7":
                    System.out.println("There is "+singlyList.size()+" in this list");
                    break;
                case "8":
                    remove();
                    break;

                case "9":
                    singlyList.clear();
                    System.out.println("Done Deleted!\n");
                    break;
                case "10":
                    search();
                    break;

                case "11":
                    sort();
                    break;

                default:
                    System.out.println("Invalid choice!");
            }
        }
    }

    private void doubly() {

        scanner = new Scanner(System.in);
        DoublyLinkedList = new DoublyLinkedList<Student>();

        String input = "";

        while (true) {

            System.out.println("Console:\n");
            System.out.println("Double linked list option has been selected:\n");
            System.out.println("*1* Pushes a student to the end of the list.");
            System.out.println("*2* Will insert a student in the list, in the specified position.");
            System.out.println("*3* Pushes a student to the beginning of the list .");
            System.out.println("*4* Adds the Student to the end of this list.");
            System.out.println("*5* Will return the student at the specified index.");
            System.out.println("*6* shows all students that are in the list.");
            System.out.println("*7* Will return the number of students in our list.");
            System.out.println("*8* Will remove a student in the list, in the specified position.");
            System.out.println("*9* Removes all of the Students from the list.");
            System.out.println("*10* Searches for a student following a precise characteristic.");
            System.out.println("*11* Sorts the list depending of the precised property.");
            System.out.println("*12* Exit\n");
            System.out.println("Select your option:");

            try {
                input = scanner.next();
            } catch (Exception e) {
                System.out.println("invalid choice");
            }

            System.out.println();

            switch (input) {
                case "0":
                    System.out.println("Exit Program");
                    System.exit(0);
                    break;

                case "1":


                    break;
                case "2":

                    break;

                case "3":

                    break;
                case "4":

                    break;

                case "5":

                    break;
                case "6":
                    System.out.println(doublyList.getAll());

                    break;

                case "7":

                    break;
                case "8":

                    break;

                case "9":
                    doublyList.removeAll();
                    System.out.println("Done Deleted!\n");
                    break;
                case "10":

                    break;

                case "11":

                    break;

                default:
                    System.out.println("Invalid choice!");
            }
        }
    }


    private void add()
    {
        System.out.println("Please enter first name: ");
        Scanner one = new Scanner(System.in);
        String na = one.next();
        System.out.println("Please enter last name: ");
        String sr = one.next();
        System.out.println("Please enter studies number: ");
        int c = one.nextInt();
        System.out.println("Please enter the matrikelnumber: ");
        int i = one.nextInt();

        singlyList.add(new Student(i, na, sr, c));
        System.out.println("\nStudent added successfully.");
    }

    private void addFirst()
    {
        System.out.println("Please enter first name: ");
        Scanner one = new Scanner(System.in);
        String na = one.next();
        System.out.println("Please enter last name: ");
        String sr = one.next();
        System.out.println("Please enter studies number: ");
        int c = one.nextInt();
        System.out.println("Please enter matrikelnumber: ");
        int i = one.nextInt();


        singlyList.addFirst(new Student(i, na, sr, c));
        System.out.println("\nStudent added successfully.");
    }

    private void addLast()
    {
        System.out.println("Please enter first name: ");
        Scanner one = new Scanner(System.in);
        String na = one.next();
        System.out.println("Please enter last name: ");
        String sr = one.next();
        System.out.println("Please enter studies number: ");
        int c = one.nextInt();
        System.out.println("Please enter matrikelnumber: ");
        int i = one.nextInt();

        singlyList.addLast(new Student(i, na, sr, c));
        System.out.println("\nStudent added successfully.");
    }

    private void insert()
    {
        Scanner one = new Scanner(System.in);

        System.out.println("Enter an index: ");
        int in = one.nextInt();
        System.out.println("Please enter first name: ");

        String na = one.next();
        System.out.println("Please enter last name: ");
        String sr = one.next();
        System.out.println("Please enter studies number: ");
        int c = one.nextInt();
        System.out.println("Please enter matrikelnumber: ");
        int i = one.nextInt();

        singlyList.insert(in, new Student(i, na, sr, c));
        System.out.println("\nStudent added successfully in the specified index.");
    }


    private void remove()
    {
        Scanner one = new Scanner(System.in);

        System.out.println("Enter the index: ");
        int in = one.nextInt();
        singlyList.remove(in);
        System.out.println("\nStudent in the specified index deleted successfully.");
    }


    private void get()
    {
        Scanner one = new Scanner(System.in);

        System.out.println("Enter the index: ");
        int in = one.nextInt();
        System.out.println(singlyList.get(in));

    }


    private void search(){

        String input = "";
        while (true) {

            System.out.println("Select the property you want the search to be based on : \n");
            System.out.println("*1* First name.");
            System.out.println("*2* Last name.");
            System.out.println("*3* Course.");
            System.out.println("*4* Matriculation number?\n");
            System.out.println("Enter the corresponding number for an option:");

            try {
                input = scanner.next();
            } catch (Exception e) {
                System.out.println("not valid ! ");
                return;
            }

            SearchOptions option = SearchOptions.Matrikelnumber;

            switch (input) {
                case "1":
                    option = SearchOptions.Lastname;
                    break;
                case "2":
                    option = SearchOptions.Prename;
                    break;
                case "3":
                    option = SearchOptions.Studies;
                    break;
                case "4":
                    option = SearchOptions.Matrikelnumber;
                    break;

                case "5":
                    option = SearchOptions.Listindex;
                    break;

                default:
                    System.out.println("not valid ! ");
                    return;
            }

            System.out.println();
            System.out.print("Search: ");

            try {
                input = scanner.next();
            } catch (Exception e) {
                System.out.println("not found! ");
                return;
            }

            if (option != SearchOptions.Listindex)
                System.out.println(SearchTool.search(singlyList, option, input).getAll());
            else {
                int index = 0;
                try {
                    index = Integer.valueOf(input);
                } catch (Exception e) {
                    System.out.println("invalid number!");
                    return;
                }
                Student s = singlyList.get(index);
                if (s != null) {
                    System.out.println(s);
                }
            }

            return;

        }
    }


    private  void sort(){
        String input = "";

        while (true) {

            System.out.println("Select a sorting method for sorting:\n");

            System.out.println("*1*  SelectionSort - Matrikelnumber");
            System.out.println("*2*  SelectionSort - Studies");
            System.out.println("*3* BubbleSort - Matrikelnumber");
            System.out.println("*4* BubbleSort - Studies \n");
            System.out.print("Please enter a number for an option: ");

            try {
                input = scanner.next();
            } catch (Exception e) {
                System.out.println("Invalid ! ");
            }

            System.out.println();

            switch (input) {
                case "1" -> SelectionSort.sort(singlyList, SortOptions.Matrikelnumber);

                //return;

                case "2" -> {
                    SelectionSort.sort(singlyList, SortOptions.Studies);
                    System.out.println();
                    return;
                }
                case "3" -> {
                    BubbleSort.sort(singlyList, SortOptions.Matrikelnumber);
                    System.out.println();
                    return;
                }
                case "4" -> {
                    BubbleSort.sort(singlyList, SortOptions.Studies);
                    System.out.println();
                }
                //return;
                default -> System.out.println("Invalid ! ");
            }

        }

    }



    public static void main(String[] args) {

        App ourApp = new App();



        scanner = new Scanner(System.in);
        singlyList = new SingleLinkedList<>();

        String input = "";

        while (true) {

            System.out.println("Console-Application:\n");
            System.out.println("Select list type before starting the main menu:\n");
            System.out.println("*1* SingleLinkedList");
            System.out.println("*2* DoubleLinkedList\n");
            System.out.println("Please enter a number for an option: ");

            try {
                input = scanner.next();
            } catch (Exception e) {
                System.out.println("choice not valid !");
            }

            System.out.println();

            switch (input) {
                case "1":

                    ourApp.singly();
                    break;

                case "2":
                    ourApp.doubly();
                    break;

                default:
                    System.out.println("Choice not valid !");
            }
        }
    }
}
